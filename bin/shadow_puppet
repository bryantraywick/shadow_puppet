#!/usr/bin/env ruby
require 'rubygems'
require 'optparse'
require 'shadow_puppet'
gem "activesupport"
require 'active_support/inflector'
require 'fileutils'

begin

  opts = OptionParser.new do |opts|
    opts.banner = <<-EOF
    NAME
      Shadow Puppet

    AUTHOR
      Jesse Newland
      jesse@railsmachine.com

    DESCRIPTION
      A Ruby DSL for puppet

    EXAMPLES
      shadow_puppet path/to/your/manifest/named/foo.rb

      The shadow_puppet binary parses the given ruby code, which is
      expected to contain a class named Foo that inherits from
      ShadowPuppet::Manifest. An instance of this class is created, and the
      #run method is called. All output is printed to the console.

      Sample manifest:

        #foo.rb
        class Foo < ShadowPuppet::Manifest
          recipe :foo

          def foo
            exec :foo, :command => '/bin/echo "foo" > /tmp/foo.txt'
          end
        end

      Executing this manifest:

        $ shadow_puppet foo.rb
        notice: /shadow_puppet:19861340/Exec[foo]/returns: executed successfully
        $
  EOF

  end

  opts.parse!

  filename = ARGV[0]
  raise ArgumentError unless filename

  klass = File.basename(filename, ".rb")
  require filename
  manifest = klass.classify.constantize.new
  run = manifest.run
  run ? exit(0) : exit(1)
rescue Errno::EACCES
  puts "Please run shadow_puppet as root"
rescue Exception => e
  if e.instance_of?(SystemExit)
    raise
  else
    puts 'Uncaught exception'
    puts e.class
    puts e.message
    puts e.backtrace.join("\n")
  end
end